bp <- ggplot(data=mtcars)
bp+geom_point(aes(x=wt,y=mpg,col=am))
## Their appears to be a inverse linear relation between weight and mileage
bp+geom_point(aes(x=wt,y=mpg,col=am))+stat_smooth(method = "lm",aes(x=wt,y=mpg,col=am))
## The line shows a negative relation between weight and mileage
## However, it needs to be noted that as weight is increasing, vehicle's transmission is shifting from "manual" to "automatic".
## This indicates that "automatic" transmission does play a positive role in increasing mileage of vehicle, specially when the weight of vehicle is increasing.
## Let's draw a graph between quater mile time (qsec) and mileage with transmission as color of dots
bp+geom_point(aes(x=qsec,y=mpg,col=am))+stat_smooth(method = "lm",aes(x=qsec,y=mpg))
## The graph has a large confidence internval and nothing can be drawn about transmission (auto/manual)
summary(lm)
resid(lm)
bp + aes(x=am,y=resid(lm))
bp + geom_point(aes(x=am,y=resid(lm)))
levels(mtcars$am)
factor(mtcars$am)
lm_am <- lm(mpg ~ qsec + wt + factor(am)-1, mtcars)
summary(lm_am)
bp+geom_point(aes(x=factor(am),y=mpg))+stat_smooth(method = "lm")
bp+geom_point(aes(x=factor(am),y=mpg))+stat_smooth(method = "lm",aes(x=factor(am),y=mpg))
bp+geom_point(aes(x=wt,y=mpg,col=am))+stat_smooth(method = "lm",aes(x=wt,y=mpg,col=am))
bp+geom_point(aes(x=factor(am),y=mpg,col=am))+stat_smooth(method = "lm",aes(x=factor(am),y=mpg,col=am))
factor(mtcars$am)
bp+geom_point(aes(x=factor(am),y=mpg,col=am))+geom_abline(slope = lm_am$coefficients[3])
bp+geom_point(aes(x=factor(am),y=mpg,col=am))+geom_abline(slope = lm_am$coefficients[3])+geom_abline(slope = lm_am$coefficients[4])
bp+geom_point(aes(x=factor(am),y=mpg,col=am))+geom_abline(slope = lm_am$coefficients[3],col="red")+geom_abline(slope = lm_am$coefficients[4],col="blue")
lm(mpg ~ am, mtcars)
class(mtc$am)
class(mtcars$am)
mean(mtcars[mtcars[,"am"==0],"mpg"])
mean(mtcars[mtcars[,4]==0,"mpg"])
mean(mtcars[mtcars[,4]==1,"mpg"])
lm_am <- lm(mpg ~ qsec + wt + factor(am), mtcars)
lm_am
summary(lm_am)
lm_am <- lm(mpg ~ factor(am)-1, mtcars)
summary(lm_am)
tam <- t.test(mpg ~ am, data = mtcars, var.equal = FALSE,pairs = FALSE)
tam
summary(tam)
tam
tam <- t.test(mpg ~ am, data = mtcars, var.equal = FALSE,pairs = FALSE,confint=.975)
tam
tam <- t.test(mpg ~ am, data = mtcars, var.equal = FALSE,pairs = FALSE,conf.level=.975)
tam
24.39231 - 17.14737
lm_am <- lm(mpg ~ factor(am)-1, mtcars)
lm_am
summary(lm_am
)
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[1],col="red")+geom_abline(slope = lm_am$coefficients[2],col="blue")
lm_am <- lm(mpg ~ wt + qsec+factor(am)-1, mtcars)
summary(lm_am)
lm_am <- lm(mpg ~ wt + qsec+factor(am), mtcars)
summary(lm_am)
## P-values are pretty small so we can safely
## Creating another graph between Transmission(x-axis) and Mileage(y-axix) and fitting two lines based on two coefficients of am0 and am1
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[3],col="red")+geom_abline(slope = lm_am$coefficients[4],col="blue")
lm_am <- lm(mpg ~ factor(am)-1, mtcars)
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[1],col="red")+geom_abline(slope = lm_am$coefficients[2],col="blue")
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[1],intercept = 0 col="red")+geom_abline(slope = lm_am$coefficients[2],col="blue")
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[1],intercept = 0, col="red")+geom_abline(slope = lm_am$coefficients[2],col="blue")
bp+geom_point(aes(x=am,y=mpg))+geom_abline(slope = lm_am$coefficients[1],intercept = 1, col="red")+geom_abline(slope = lm_am$coefficients[2],col="blue")
lm_am <- lm(mpg ~ qsec + wt + factor(am)-1, mtcars)
bp+geom_point(aes(x=factor(am),y=mpg,col=am))+geom_abline(slope = lm_am$coefficients[3])
lm_am
data("mtcars")
View(mtcars)
library(dplyr)
library(ggplot2)
library(GGally)
lm <- lm(mpg ~ .,data = mtcars)
nrow<-nrow(summary(lm)$coef)
for(i in 1:nrow){
max <- max(summary(lm)$coef[2:nrow,4])
if(max > .05){
names <- rownames(summary(lm)$coef)[summary(lm)$coef[,4]==max]
mtcars <- select(mtcars,-names)
lm <- lm(mpg ~.,data=mtcars)
nrow <- nrow(summary(lm)$coef)
}
else{break}
}
summary(lm)
ggpairs(data=mtcars,lower = list("combo"))
bp <- ggplot(data=mtcars)
bp+geom_point(aes(x=am,y=mpg,col=am))
data("mtcars")
View(mtcars)
library(dplyr)
library(ggplot2)
library(GGally)
lm <- lm(mpg ~ .,data = mtcars)
nrow<-nrow(summary(lm)$coef)
for(i in 1:nrow){
max <- max(summary(lm)$coef[2:nrow,4])
if(max > .05){
names <- rownames(summary(lm)$coef)[summary(lm)$coef[,4]==max]
mtcars <- select(mtcars,-names)
lm <- lm(mpg ~.,data=mtcars)
nrow <- nrow(summary(lm)$coef)
}
else{break}
}
summary(lm)
ggpairs(data=mtcars,lower = list("combo"))
bp <- ggplot(data=mtcars)
bp+geom_point(aes(x=am,y=mpg,col=am))
summary(lm_am0
)
summary(lm_am)
install.packages("leaglets")
install.packages("leaglet")
install.packages("leaflet")
library(leaflet)
leaflet()
addTiles()
addTiles()
addTiles(leaflet())
my_map <- leaflet() %>% addTiles()
my_city_map <- leaflet(width = 10,height = 10) %>% addTiles()
my_city_map <- leaflet(width = 10,height = 10) %>% addTiles()
my_city_map <- leaflet(width = 10,height = 10) %>% addTiles()
my_city_map
my_city_map <- leaflet(width = 100,height = 100) %>% addTiles()
my_city_map
my_city_map <- leaflet(width = 1000,height = 1000) %>% addTiles()
my_city_map
my_city_map <- leaflet(width = 1000,height = 10000) %>% addTiles()
my_city_map
my_city_map <- leaflet(width = 500,height = 500) %>% addTiles()
my_city_map <- leaflet(width = 500,height = 500) %>% addTiles()
my_city_map
my_city_map <- leaflet(width = 500,height = 500) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet() %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 100)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 75)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 50)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 0)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 10)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet(leafletOptions(maxZoom = 10, minZoom = 10)) %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra")
my_city_map
my_city_map <- leaflet() %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
options = (minZoom=10) )
my_city_map
my_city_map <- leaflet() %>% addTiles(options = (minZoom=10) ) %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
)
my_city_map
my_city_map <- leaflet() %>% addTiles(options = (minZoom=10) ) %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
)
my_city_map
my_city_map <- leaflet() %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
)
my_city_map
read.csv(getwd(),agra_pop_ward)
read.csv("D:/R/Working_DIR//agra_pop_ward.csv")
read.csv("D:/R/Working_DIR//agra_pop_ward.csv",header = FALSE)
read.csv("D:/R/Working_DIR//agra_pop_ward.csv",header = FALSE, col.names = c("Ward_no.","population"))
ag_population_ward <- read.csv("D:/R/Working_DIR//agra_pop_ward.csv",header = FALSE, col.names = c("Ward_no","population"))
my_city_map <- ag_population_ward%>%leaflet() %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
)
my_city_map
my_city_map <- ag_population_ward%>%leaflet() %>% addTiles() %>%
addMarkers(lat = 27.176670,lng=78.008072, popup = "Agra",
) %>% addCircleMarkers()
my_city_map
%>%addCircleMarkers()
my_city_map
install.packages("maps")
library(maps)
data("countyMapEnv")
data("countyMapEnv")
View(countyMapEnv)
data("county.fips")
View(county.fips)
usaMapEnv
View(usaMapEnv)
insta;install.packages("pdftools")
install.packages("pdftools")
library(pdftools)
fire <- pdf_text("D:\R\Working_DIR\Fires_2016_Cal.pdf")
fire <- pdf_text("D://R//Working_DIR//Fires_2016_Cal.pdf")
head(fire)
View(fire
)
fire <- read.table("D://R//Working_DIR//Fires_2016_Cal.pdf")
fire <- read.csv("D://R//Working_DIR//Fires_2016_Cal.pdf")
read.pdf
fire <- pdf_text("D://R//Working_DIR//Fires_2016_Cal.pdf")
head(fire)
str(fire)
pdf_data("D://R//Working_DIR//Fires_2016_Cal.pdf")
read.csv("D:/R/Working_DIR//Fires_2016_Cal.csv")
fire_data <- read.csv("D:/R/Working_DIR//Fires_2016_Cal.csv")
fire_data <- read.csv("D:/R/Working_DIR//Fires_2016_Cal.csv", header = FALSE)
View(fire_data)
fire_data <- read.csv("D:/R/Working_DIR//Fires_2016_Cal.csv", header = FALSE, skip = 5)
View(fire_data)
us.cities <- read.csv("D://R//Working_DIR//Fires_2016_Cal.csv")
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv")
head(us.cities)
colnames(us.cities)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv")
head(us.cities)
head(fire_data$V1)
us.cities$county_name == fire_data$V1
sapply(fire_data,class)
us.cities$county_name == as.char(fire_data$V1)
us.cities$county_name == as.character(fire_data$V1)
sum(us.cities$county_name == as.character(fire_data$V1))
fire_data <- read.csv("D://R//Working_DIR//Fires_2016_Cal.csv",
header = FALSE, skip = 5,nrows = 26)
fire_data
fire_data <- read.csv("D://R//Working_DIR//Fires_2016_Cal.csv",
header = FALSE, skip = 5,nrows = 27)
fire_data
sum(us.cities$county_name == as.character(fire_data$V1))
sapply(us.cities,class)
sum(us.cities$as.character(county_name) == as.character(fire_data$V1))
us.cities$as.character(county_name) == as.character(fire_data$V1)
sum(as.character(us.cities$(county_name)) == as.character(fire_data$V1))
sum(as.character(us.cities$county_name) == as.character(fire_data$V1))
sum(as.character(fire_data$V1)==as.character(us.cities$county_name) )
fire_data <- read.csv("D://R//Working_DIR//Fires_2016_Cal.csv",
header = FALSE, skip = 5,nrows = 27)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv")
sum(as.character(fire_data$V1)==as.character(us.cities$county_name) )
fire_data <- read.csv("D://R//Working_DIR//Fires_2016_Cal.csv",
header = FALSE)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv")
sum(as.character(fire_data$V1)==as.character(us.cities$county_name) )
View(us.cities)
my_city_map <- us.cities%>%leaflet() %>% addTiles()
%>%addCircleMarkers()
my_city_map
my_city_map <- us.cities%>%leaflet() %>% addTiles()
names(us.cities)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv",
header = FALSE)
names(us.cities)
my_city_map <- us.cities%>%leaflet() %>% addTiles()
%>%addCircleMarkers(V6)
my_city_map <- us.cities%>%leaflet() %>% addTiles()
%>%addCircleMarkers(us.cities$V6)
my_city_map <- us.cities%>%leaflet()%>%addCircleMarkers(us.cities$V6)
my_city_map
my_city_map <- us.cities%>%leaflet()%>%
addCircleMarkers(lat = us.cities$v7, lng = us.cities$v8)
my_city_map
sum(is.na(us.cities$v7))
sum(is.na(us.cities$v8))
my_city_map <- us.cities%>%leaflet()%>%
addCircleMarkers(lat = as.numeric(us.cities$v7),
lng = as.numeric(us.cities$v8))
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addCircleMarkers(lat = as.numeric(us.cities$v7),
lng = as.numeric(us.cities$v8))
my_city_map
addCircleMarkers()
my_city_map <- us.cities%>%leaflet()%>%addTiles(lat = as.numeric(us.cities$v7),
lng = as.numeric(us.cities$v8)%>%
addCircleMarkers()
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = as.numeric(us.cities$v7),
lng = as.numeric(us.cities$v8))%>%
addCircleMarkers()
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = as.numeric(us.cities$v7),
lng = as.numeric(us.cities$v8))
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = as.numeric(us.cities$V7),
lng = as.numeric(us.cities$V8))%>%
addCircleMarkers()
class(us.cities$v7) <- as.numeric(us.cities$V7)
us.cities$V7
us.cities$v7 <- as.numeric(us.cities$V7)
us.cities$v8 <- as.numeric(us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = us.cities$V7),
lng = us.cities$V8)%>%
addCircleMarkers()
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = us.cities$V7),
lng = us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%
addTiles(lat = us.cities$V7,
lng = us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8)
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addCircleMarkers(lat = us.cities$V7,
lng = us.cities$V8)
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addCircleMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions())%>%
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addCircleMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions())
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions())
my_city_map
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions()
popup = us.cities$V1)
us.cities$V1
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions()
popup = as.character(us.cities$V1))
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions(),
popup = as.character(us.cities$V1))
my_city_map
download.file(url = "https://simplemaps.com/static/data/us-cities/uscitiesv1.4.csv","uscitiesv1.4.csv")
download.file(url = "https://simplemaps.com/static/data/us-cities/uscitiesv1.4.csv","uscitiesv.csv")
us.cities <- read.csv("D://R//Working_DIR//uscitiesv1.4.csv",
header = FALSE)
us.cities$v8 <- as.numeric(us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions(),
popup = as.character(us.cities$V1))
my_city_map
us.cities <- read.csv("D://R//Working_DIR//uscitiesv.csv",
header = FALSE)
us.cities$v8 <- as.numeric(us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions(),
popup = as.character(us.cities$V1))
us.cities <- read.csv("D://R//Working_DIR//uscitiesv.csv",
header = FALSE)
us.cities$V7 <- as.numeric(us.cities$V7)
us.cities$V8 <- as.numeric(us.cities$V8)
my_city_map <- us.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = us.cities$V7,
lng = us.cities$V8,
clusterOptions = markerClusterOptions(),
popup = as.character(us.cities$V1))
my_city_map
head(us.cities)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv.csv",
header = TRUE)
us.cities$V7 <- as.numeric(us.cities$V7)
us.cities$V8 <- as.numeric(us.cities$V8)
head(us.cities)
us.cities$V7 <- as.numeric(us.cities$lat)
us.cities$V8 <- as.numeric(us.cities$lng)
cal.cities <- us.cities[us.cities[,"state_name"]=="California",]
nrow(cal.cities)
my_city_map <- cal.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = cal.cities$lat,
lng = cal.cities$lat,
clusterOptions = markerClusterOptions(),
popup = cal.character(us.cities$city))
my_city_map <- cal.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = cal.cities$lat,
lng = cal.cities$lat,
clusterOptions = markerClusterOptions(),
popup = as.character(us.cities$city))
my_city_map
my_city_map <- cal.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = cal.cities$lat,
lng = cal.cities$lat,
clusterOptions = markerClusterOptions(),
popup = as.character(cal.cities$city))
my_city_map
cal.cities <- us.cities[us.cities[,"state_name"]=="California",]
my_city_map <- cal.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = cal.cities$lat,
lng = cal.cities$lat,
clusterOptions = markerClusterOptions(),
popup = as.character(cal.cities$city))
my_city_map
my_city_map <- cal.cities%>%leaflet()%>%addTiles()%>%
addMarkers(lat = cal.cities$lat,
lng = cal.cities$lng,
clusterOptions = markerClusterOptions(),
popup = as.character(cal.cities$city))
my_city_map
install.packages("plotly")
library(plotly)
us.cities <- read.csv("D://R//Working_DIR//uscitiesv.csv",
header = TRUE)
us.cities$population <- as.numeric(us.cities$population)
us.cities$city <- as.character(us.cities$city)
us.cities$density <- as.numeric(us.cities$density)
cal.cities <- us.cities[us.cities[,"state_name"]=="California",]
plotly(cal.cities, x=city,y=population,mode="markers")
names(cal.cities)
plot(cal.cities$city,cal.cities$population)
max(cal.cities$population)
sum(is.na(cal.cities$population))
x <-cal.cities[cal.cities[,"population"]!=NA,]
sum(is.na(cal.cities$population))
sum(is.na(x$population))
cal.cities[,"population"]
cal.cities[,"population"]!=NA
cal.cities[,"population"] is NA
cal.cities[,"population"]==NA
x <-cal.cities[cal.cities[,!is.na("population")],]
x <-cal.cities[!is.na(cal.cities$population),]
sum(is.na(x$population))
x
sapply(x,names)
cal.cities <-cal.cities[!is.na(cal.cities$population),]
plotly(cal.cities, x=city,y=population,mode="markers")
plot(cal.cities$city,cal.cities$population)
max(cal.cities$population)
plot(cal.cities$city,cal.cities$population/1000)
plot(cal.cities$city,cal.cities$population/10000)
plot(cal.cities$city,cal.cities$population/100000)
cal.cities$population/100000
hist(cal.cities$city,cal.cities$population/100000)
plot(cal.cities$city,cal.cities$population/100000,type="p")
data(mtcars)
View(mtcars)
plotly(mtcars,x=wt,y=mpg,col=am)
plotly(mtcars,x=wt,y=mpg,col=am,mode="marker")
plot_ly(mtcars,x=wt,y=mpg,col=am,mode="marker")
mtcars$wt
plot_ly(mtcars,wt,mpg,col=am,mode="marker")
plot_ly(data=mtcars,wt,mpg,col=am,mode="marker")
install.packages("plot_ly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
data(mtcars)
View(mtcars)
plot_ly(data=mtcars,wt,mpg,col=am,mode="marker")
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=am,mode="marker")
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=mtcars$am,mode="marker")
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
data(mtcars)
View(mtcars)
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=mtcars$am,mode="marker")
library(plotly)
data(mtcars)
View(mtcars)
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=mtcars$am,mode="marker")
plot_ly(data=mtcars,x=wt,y=mpg)
plot_ly(mtcars,wt,mpg,type = "scatter")
plot_ly(mtcars,mtcars$wt,mtcars$mpg,type = "scatter")
library(plotly)
data(mtcars)
View(mtcars)
data(mtcars)
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=mtcars$am,mode="marker")
plot_ly(data=mtcars,mtcars$wt,mtcars$mpg,col=mtcars$am)
plot_ly(mtcars,mtcars$wt,mtcars$mpg,type = "scatter",mode="markers")
library(plotly)
data(mtcars)
plot_ly(mtcars,mtcars$wt,mtcars$mpg,type = "scatter",mode="markers")
sapply(mtcars,class)
ggplot(data = mtcars,aes(x=wt,y=mpg,col=am))
ggplot(data = mtcars,aes(x=wt,y=mpg,col=am)) + geom_point()
library(plotly)
plot_ly(mtcars$wt,mtcars$mpg,type = "scatter",mode="markers")
plot_ly(mtcars$wt~mtcars$mpg,type = "scatter",mode="markers")
plot_ly(mtcars,type = "scatter",mode="markers")
library(slidify)
library(slidifyLibraries)
author("test")
slidify("index.Rmd")
slidify("MyShinyApp")
setwd("D://R//Working_DIR")
slidify("MyShinyApp")
author("MyShinyApp")
slidify("MyShinyApp")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user='titibi',repo='Peer-graded-Assignment-Course-Project-Shiny-Application-and-Reproducible-Pitch',host='github')
publish(user='Titibi',repo='Peer-graded-Assignment-Course-Project-Shiny-Application-and-Reproducible-Pitch',host='github')
